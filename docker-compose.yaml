---
version: "3.4"
# 3.4 requires Docker engine release 17.09.0+

services:
  redis:
    container_name: redis
    image: redis:alpine
    networks:
      default:
        aliases:
          - door43-enqueue-job_redis_1

  d43enqueue:
    container_name: d43enqueue
    build:
      context: ./door43-enqueue-job/enqueue
      dockerfile: Dockerfile-developBranch
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - GITEA_URL=${GITEA_URL}
      - RESTRICT_GITEA_URL=${RESTRICT_GITEA_URL}
      - REDIS_HOSTNAME=door43-enqueue-job_redis_1
    networks:
      default:
        aliases:
          - enqueue
          - door43-enqueue-job_enqueue_1
    depends_on:
      - redis

  d43proxy:
    container_name: d43proxy
    image: nginx:latest
    volumes:
      - ${PWD}/door43-enqueue-job/proxyConf/dev-nginx.conf:/etc/nginx/conf.d/mysite.template:ro
    environment:
      - ALLOWED_IPS=${ALLOWED_IPS:-0.0.0.0/0}
    command: /bin/sh -c "envsubst '$$ALLOWED_IPS' < /etc/nginx/conf.d/mysite.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    networks:
      default:
        aliases:
          - proxy
          - door43-enqueue-job_proxy_1
    depends_on:
      - d43enqueue
      
  d43-job-handler:
    container_name: d43-job-handler
    image: python:3
    environment:
      - QUEUE_PREFIX=dev-
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - DB_ENDPOINT=${DB_ENDPOINT}
      - TX_DATABASE_PW=${TX_DATABASE_PW}
      - DEBUG_MODE=true
      - REDIS_URL=${REDIS_URL}
      - GOGS_USER_TOKEN=${GOGS_USER_TOKEN}
    volumes:
      - ${PWD}/door43-job-handler:/scripts
      - door43_u:/site/u
    networks:
      default:
        aliases:
          - D43_DevJob_Handler
          - develop.door43.org
    command: /bin/bash -c "cd /scripts; pip install -r requirements.txt; rq worker --config rq_settings --name D43_Dev_JobHandler"
    depends_on:
      - d43proxy

  txenqueue:
    container_name: txenqueue
    build:
      context: ./tx-enqueue-job/tXenqueue
      dockerfile: Dockerfile-developBranch
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - REDIS_HOSTNAME=door43-enqueue-job_redis_1
    depends_on:
      - redis

  txproxy:
    container_name: txproxy
    image: nginx:latest
    volumes:
      - ${PWD}/tx-enqueue-job/proxyConf/dev-nginx.conf:/etc/nginx/conf.d/mysite.template:ro
    environment:
      - ALLOWED_IPS=${ALLOWED_IPS:-0.0.0.0/0}
    command: /bin/sh -c "envsubst '$$ALLOWED_IPS' < /etc/nginx/conf.d/mysite.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    networks:
      default:
        aliases:
          - tx-enqueue-job_proxy_1
    depends_on:
      - txenqueue
    
  tx-job-handler:
    container_name: tx-job-handler
    image: python:3
    environment:
      - QUEUE_PREFIX=dev-
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - DEBUG_MODE=true
      - REDIS_URL=${REDIS_URL}
      - GOGS_USER_TOKEN=${GOGS_USER_TOKEN}
    volumes:
      - ${PWD}/tx-job-handler:/scripts
    networks:
      default:
        aliases:
          - tX_Dev_Job_Handler
    command: /bin/bash -c "cd /scripts; pip install -r requirements.txt; rq worker --config rq_settings --name tX_Dev_Job_Handler"
    depends_on:
      - txproxy

  dcs:
    container_name: dcs
    image: unfoldingword/dcs:latest
    volumes:
      - dcs-data:/data 
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - USER_UID=1000
      - USER_GID=1000
    ports:
      - 3000:3000
  
  door43.org:
    container_name: door43.org
    build:
      context: ./door43.org
      dockerfile: Dockerfile
    volumes:
      - door43_u:/site/u
    networks:
      default:
        aliases:
          - door43.org
          - dev.door43.org
    ports:
      - "${LISTEN_IP:-127.0.0.1}:3001:80"

networks:
  default:
    external:
      name: tx-net

volumes:
  door43_u:
    external: true
    name: door43_u  
  dcs-data:
    external: true
    name: dcs-data
